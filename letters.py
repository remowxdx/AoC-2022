class Letters:
    LETTERS = {
        "A": [
            ".##.",
            "#..#",
            "#..#",
            "####",
            "#..#",
            "#..#",
        ],
        "B": [
            "###.",
            "#..#",
            "###.",
            "#..#",
            "#..#",
            "###.",
        ],
        "C": [
            ".##.",
            "#..#",
            "#...",
            "#...",
            "#..#",
            ".##.",
        ],
        "D": [
            "##..",
            "#.#.",
            "#..#",
            "#..#",
            "#..#",
            "###.",
        ],
        "E": [
            "####",
            "#...",
            "###.",
            "#...",
            "#...",
            "####",
        ],
        "F": [
            "####",
            "#...",
            "###.",
            "#...",
            "#...",
            "#...",
        ],
        "G": [
            ".##.",
            "#..#",
            "#...",
            "#.##",
            "#..#",
            ".###",
        ],
        "H": [
            "#..#",
            "#..#",
            "####",
            "#..#",
            "#..#",
            "#..#",
        ],
        "I": [
            "###.",
            ".#..",
            ".#..",
            ".#..",
            ".#..",
            "###.",
        ],
        "J": [
            "####",
            "...#",
            "...#",
            "...#",
            "#..#",
            ".##.",
        ],
        "K": [
            "#..#",
            "#.#.",
            "##..",
            "##..",
            "#.#.",
            "#..#",
        ],
        "L": [
            "#...",
            "#...",
            "#...",
            "#...",
            "#...",
            "####",
        ],
        "M": [
            "#..#",
            "####",
            "#..#",
            "#..#",
            "#..#",
            "#..#",
        ],
        "N": [
            "#..#",
            "##.#",
            "##.#",
            "#.##",
            "#.##",
            "#..#",
        ],
        "O": [
            ".##.",
            "#..#",
            "#..#",
            "#..#",
            "#..#",
            ".##.",
        ],
        "P": [
            "###.",
            "#..#",
            "#..#",
            "###.",
            "#...",
            "#...",
        ],
        "Q": [
            ".##.",
            "#..#",
            "#..#",
            "#..#",
            "#.#.",
            ".#.#",
        ],
        "R": [
            "###.",
            "#..#",
            "#..#",
            "###.",
            "#.#.",
            "#..#",
        ],
        "S": [
            ".##.",
            "#..#",
            ".#..",
            "..#.",
            "#..#",
            ".##.",
        ],
        "T": [
            "###.",
            ".#..",
            ".#..",
            ".#..",
            ".#..",
            ".#..",
        ],
        "U": [
            "#..#",
            "#..#",
            "#..#",
            "#..#",
            "#..#",
            ".##.",
        ],
        "V": [
            "#..#",
            "#..#",
            "#..#",
            "#..#",
            ".##.",
            ".##.",
        ],
        "W": [
            "#..#",
            "##.#",
            "##.#",
            "####",
            "####",
            ".###",
        ],
        "X": [
            "#..#",
            "#..#",
            ".##.",
            ".##.",
            "#..#",
            "#..#",
        ],
        "Y": [
            "#..#",
            "#..#",
            ".#.#",
            "..#.",
            ".#..",
            "#...",
        ],
        "Z": [
            "####",
            "...#",
            "..#.",
            ".#..",
            "#...",
            "####",
        ],
        "0": [
            ".##.",
            "#..#",
            "#.##",
            "##.#",
            "#..#",
            ".##.",
        ],
        "1": [
            "..#.",
            ".##.",
            "#.#.",
            "..#.",
            "..#.",
            ".###",
        ],
        "2": [
            ".##.",
            "#..#",
            "..#.",
            ".#..",
            "#...",
            "####",
        ],
        "3": [
            "####",
            "..#.",
            ".#..",
            "...#",
            "#..#",
            ".##.",
        ],
        "4": [
            "...#",
            "..#.",
            ".#..",
            "#..#",
            "####",
            "...#",
        ],
        "5": [
            "####",
            "#...",
            "###.",
            "...#",
            "#..#",
            ".##.",
        ],
        "6": [
            "...#",
            "..#.",
            ".#..",
            "#.#.",
            "#..#",
            ".##.",
        ],
        "7": [
            "####",
            "...#",
            "..#.",
            ".#..",
            "#...",
            "#...",
        ],
        "8": [
            ".##.",
            "#..#",
            ".##.",
            "#..#",
            "#..#",
            ".##.",
        ],
        "9": [
            ".##.",
            "#..#",
            "#..#",
            ".###",
            "...#",
            "###.",
        ],
        " ": [
            "....",
            "....",
            "....",
            "....",
            "....",
            "....",
        ],
        "sep": [
            ".",
            ".",
            ".",
            ".",
            ".",
            ".",
        ],
    }

    def ocr(self, image):
        lines = image.splitlines()
        recognized = []
        offset = 0
        while offset < len(lines[0]):
            for letter, shape in self.LETTERS.items():
                found = True
                for row in range(6):
                    for x in range(4):
                        if lines[row][offset + x] != shape[row][x]:
                            found = False
                            break
                    if not found:
                        break
                if found:
                    recognized.append(letter)
                    break
            else:
                raise ValueError(
                    f"Image not recognized at {offset} {''.join(recognized)}.\n{image}"
                )
            offset += 5
        return "".join(recognized)

    def to_str(self, text):
        lines = []
        for line in range(6):
            text_line = [self.LETTERS[char][line] for char in text]
            lines.append(self.LETTERS["sep"][line].join(text_line))
        return "\n".join(lines)

    def print(self, text):
        print(self.to_str(text))


if __name__ == "__main__":
    letters = Letters()
    letters.print("HI MAN")
    print()
    img = letters.to_str("QWIRTY09")
    print(img)
    print(letters.ocr(img))
